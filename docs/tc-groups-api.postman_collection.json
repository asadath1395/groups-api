{
	"info": {
		"_postman_id": "16bcf9b8-7442-41da-8beb-7307a72359a3",
		"name": "tc-groups-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "group",
			"item": [
				{
					"name": "create group",
					"item": [
						{
							"name": "create group via admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"GROUP_ID\", pm.response.json().result.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1\",\n    \"description\": \"desc1\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "create group via M2M Read And Write",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"GROUP_ID2\", pm.response.json().result.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_RW_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group2\",\n    \"description\": \"desc2\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "create group via M2M Write",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"GROUP_ID3\", pm.response.json().result.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_W_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group3\",\n    \"description\": \"desc3\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "create group via M2M All",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"GROUP_ID4\", pm.response.json().result.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_ALL_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group4\",\n    \"description\": \"desc4\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "create group with domain",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0ea6b6db-be37-42c2-83d3-38dace2819a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"GROUP_WITH_DOMAIN_ID\", pm.response.json().result.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"equals": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group5\",\n    \"description\": \"desc5\",\n    \"privateGroup\": false,\n    \"selfRegister\": true,\n    \"domain\": \"test_domain\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "create group with status",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group6\",\n    \"description\": \"desc6\",\n    \"privateGroup\": false,\n    \"selfRegister\": true,\n    \"domain\": \"test_domain\",\n    \"status\": \"inactive\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								},
								"description": "create group with status"
							},
							"response": []
						},
						{
							"name": "failure create group via user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group_fail\",\n    \"description\": \"desc_fail\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create group via M2M Read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group_fail\",\n    \"description\": \"desc_fail\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create group with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group_fail\",\n    \"description\": \"desc_fail\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create group without token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group_fail\",\n    \"description\": \"desc_fail\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update group",
					"item": [
						{
							"name": "update group via admin",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-1\",\n    \"description\": \"desc1-updated-1\",\n    \"privateGroup\": true,\n    \"selfRegister\": false,\n    \"domain\": \"add_domain\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group via M2M Read And Write",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_RW_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-2\",\n    \"description\": \"desc1-updated-2\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group via M2M Write",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_W_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-3\",\n    \"description\": \"desc1-updated-3\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group via M2M All",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_ALL_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-4\",\n    \"description\": \"desc1-updated-4\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group with domain",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group5\",\n    \"description\": \"desc5\",\n    \"privateGroup\": false,\n    \"selfRegister\": true,\n    \"domain\": \"update_domain\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_WITH_DOMAIN_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_WITH_DOMAIN_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group without domain",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group2-update\",\n    \"description\": \"desc2-update\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update group without status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-5\",\n    \"description\": \"desc1-updated-5\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update group via user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e1a1171-2087-4063-aebc-6e4aac144a49",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-fail\",\n    \"description\": \"desc1-updated-fail\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update group via M2M read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e1a1171-2087-4063-aebc-6e4aac144a49",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-fail\",\n    \"description\": \"desc1-updated-fail\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update group with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e1a1171-2087-4063-aebc-6e4aac144a49",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-fail\",\n    \"description\": \"desc1-updated-fail\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update group without token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e1a1171-2087-4063-aebc-6e4aac144a49",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-fail\",\n    \"description\": \"desc1-updated-fail\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group with status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-5\",\n    \"description\": \"desc1-updated-5\",\n    \"privateGroup\": true,\n    \"selfRegister\": false,\n    \"status\": \"inactive\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "search groups",
					"item": [
						{
							"name": "search groups from admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&memberId=11ab038e-48da-123b-96e8-8d3b99b6d183&membershipType=group",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "memberId",
											"value": "11ab038e-48da-123b-96e8-8d3b99b6d183"
										},
										{
											"key": "membershipType",
											"value": "group"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search groups from user",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&memberId=11ab038e-48da-123b-96e8-8d3b99b6d183&membershipType=group",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "memberId",
											"value": "11ab038e-48da-123b-96e8-8d3b99b6d183"
										},
										{
											"key": "membershipType",
											"value": "group"
										}
									]
								},
								"description": "memberId and membershipType are ignored in backend, memberId change into user id, membershipType change into 'user'"
							},
							"response": []
						},
						{
							"name": "search groups via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&memberId=11ab038e-48da-123b-96e8-8d3b99b6d183&membershipType=group",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "memberId",
											"value": "11ab038e-48da-123b-96e8-8d3b99b6d183"
										},
										{
											"key": "membershipType",
											"value": "group"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search groups return all",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search groups with filter oldId",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&oldId=12345",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "oldId",
											"value": "12345"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search groups with filter privateGroup and selfRegister",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&privateGroup=false&selfRegister=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "privateGroup",
											"value": "false"
										},
										{
											"key": "selfRegister",
											"value": "true"
										},
										{
											"key": "oldId",
											"value": "12346",
											"disabled": true
										},
										{
											"key": "selfRegister",
											"value": "false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure search groups invalid parameter 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33d0065f-b6ac-47f3-84b0-4f20241ce716",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&memberId=11ab038e-48da-123b-96e8-8d3b99b6d183",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "memberId",
											"value": "11ab038e-48da-123b-96e8-8d3b99b6d183"
										},
										{
											"key": "membershipType",
											"value": "group",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure search groups invalid parameter 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33d0065f-b6ac-47f3-84b0-4f20241ce716",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&membershipType=group",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "memberId",
											"value": "11ab038e-48da-123b-96e8-8d3b99b6d183",
											"disabled": true
										},
										{
											"key": "membershipType",
											"value": "group"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get group",
					"item": [
						{
							"name": "get public group via admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_WITH_DOMAIN_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_WITH_DOMAIN_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get public group via user",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER2_USER_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get public group via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_RW_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_PRIVATE_GROUP_ID}}?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_PRIVATE_GROUP_ID}}"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_PRIVATE_GROUP_ID}}?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_PRIVATE_GROUP_ID}}"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via user4",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_PRIVATE_GROUP_ID}}?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_PRIVATE_GROUP_ID}}"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get group with domain",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_WITH_DOMAIN_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_WITH_DOMAIN_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get private group via user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb8cc82b-3efd-4454-9c21-1795ca67ddab",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_PRIVATE_GROUP_ID}}?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_PRIVATE_GROUP_ID}}"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete group",
					"item": [
						{
							"name": "failure delete group via M2M Read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3eb087fc-b6f3-41f1-8edc-d937e1093763",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_R_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure delete group via user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3eb087fc-b6f3-41f1-8edc-d937e1093763",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group via admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3eb087fc-b6f3-41f1-8edc-d937e1093763",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group via M2M Read And Write",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3eb087fc-b6f3-41f1-8edc-d937e1093763",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_RW_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group via M2M Write",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3eb087fc-b6f3-41f1-8edc-d937e1093763",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_W_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group via M2M All",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3eb087fc-b6f3-41f1-8edc-d937e1093763",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_ALL_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID4}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID4}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get group by old id",
					"item": [
						{
							"name": "get public group via admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/12346",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"12346"
									]
								}
							},
							"response": []
						},
						{
							"name": "get public group via user",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER2_USER_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/12346",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"12346"
									]
								}
							},
							"response": []
						},
						{
							"name": "get public group via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_RW_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/12346",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"12346"
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/12345?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"12345"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/12345?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"12345"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via user4",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/12345?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"12345"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get private group via user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb8cc82b-3efd-4454-9c21-1795ca67ddab",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/12345?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"12345"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4b651537-6c26-4f18-ae6d-6f3c53aa7f18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1f50ae8d-c7dd-46d6-9b99-6c69b641ee3d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "group membership",
			"item": [
				{
					"name": "get group members",
					"item": [
						{
							"name": "get group members from admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get group members via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_ALL_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get group members from user",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group members from admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_PRIVATE_GROUP_ID}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_PRIVATE_GROUP_ID}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group members from user4",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_PRIVATE_GROUP_ID}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_PRIVATE_GROUP_ID}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group members via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_W_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_PRIVATE_GROUP_ID}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_PRIVATE_GROUP_ID}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get private group members from user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2975ae8-666d-4f8e-a30e-06e3c4b3e3ec",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_PRIVATE_GROUP_ID}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_PRIVATE_GROUP_ID}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "add group member",
					"item": [
						{
							"name": "failure add group member (user) by user4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_USER_ID}}\",\n    \"membershipType\": \"user\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure add group member (user) via M2M Read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_USER_ID}}\",\n    \"membershipType\": \"user\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure add group member (user) into non self-reg group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_USER_ID}}\",\n    \"membershipType\": \"user\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_NON_SELFREG_GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_NON_SELFREG_GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "add group member (user) by user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_USER_ID}}\",\n    \"membershipType\": \"user\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "add group member (user) via M2M Write",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_W_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_USER_ID2}}\",\n    \"membershipType\": \"user\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure add group member (group) by user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER2_USER_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_GROUP_ID2}}\",\n    \"membershipType\": \"group\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure add group member (group) by M2M Read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_GROUP_ID2}}\",\n    \"membershipType\": \"group\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "add group member (group) by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_GROUP_ID2}}\",\n    \"membershipType\": \"group\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "add group member (group) by admin Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71883186-3abb-4529-89bd-6eea09b9934e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_W_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_PRIVATE_GROUP_ID}}\",\n    \"membershipType\": \"group\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get group member",
					"item": [
						{
							"name": "get group member (user)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get group member (group)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members/{{TEST_GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members",
										"{{TEST_GROUP_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get private group member (user)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4557415-deff-4dc2-840d-f6fc68f24ab9",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{TEST_PRIVATE_GROUP_ID}}/members/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_PRIVATE_GROUP_ID}}",
										"members",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete group member",
					"item": [
						{
							"name": "failure delete group member (group) by user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf91913f-0ce4-4ee5-9c0e-3e634481f3d8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER2_USER_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members/{{TEST_GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members",
										"{{TEST_GROUP_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure delete group member (group) by M2M Read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf91913f-0ce4-4ee5-9c0e-3e634481f3d8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members/{{TEST_GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members",
										"{{TEST_GROUP_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group member (user) by user2",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER2_USER_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group member (group) by M2M",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_ALL_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/members/{{TEST_GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_GROUP_ID}}",
										"members",
										"{{TEST_GROUP_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure delete group member (user in non self-reg group) by user4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf91913f-0ce4-4ee5-9c0e-3e634481f3d8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_NON_SELFREG_GROUP_ID}}/members/{{TEST_USER_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_NON_SELFREG_GROUP_ID}}",
										"members",
										"{{TEST_USER_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group member (user in non self-reg group) by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf91913f-0ce4-4ee5-9c0e-3e634481f3d8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{TEST_NON_SELFREG_GROUP_ID}}/members/{{TEST_USER_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{TEST_NON_SELFREG_GROUP_ID}}",
										"members",
										"{{TEST_USER_ID2}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get group member count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}/groups/{{TEST_GROUP_ID}}/membersCount?includeSubGroups=true",
							"host": [
								"{{URL}}"
							],
							"path": [
								"groups",
								"{{TEST_GROUP_ID}}",
								"membersCount"
							],
							"query": [
								{
									"key": "includeSubGroups",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4b651537-6c26-4f18-ae6d-6f3c53aa7f18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1f50ae8d-c7dd-46d6-9b99-6c69b641ee3d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "health check",
			"item": [
				{
					"name": "get app health status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}/groups/health",
							"host": [
								"{{URL}}"
							],
							"path": [
								"groups",
								"health"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4e396df5-d3a4-4c5f-8477-eeead6536fd5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "683c9325-3bdf-4d2f-89f2-6e2e4f5c854f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}